// Input: a#b (a and b are binary numbers)
// Ouput: a+b
// Example: 1011#10 outputs 1101
//
// Binary Addition Algorithm
// for Turing Machine Simulator 
// turingmachinesimulator.com
// By Jose Antonio Matte

//qcopyinput - copy input to tape2
//qreturninput - resets tape2
//qreadstate - reads state into tape3 as current state
//qinputcheck - looks at input tape for 0 or 1

name: Binary addition
init: qcopyinput
accept: q0

//qcopyinput
qcopyinput, 1,_,_
qcopyinput, _,1,_,>,>,-

qcopyinput, 0,_,_
qcopyinput, _,0,_,>,>,-

qcopyinput, #,_,_
qreturninput, #,_,_,-,<,-

//qreturninput
qreturninput, #,1,_
qreturninput, #,1,_,-,<,-

qreturninput, #,0,_
qreturninput, #,0,_,-,<,-

qreturninput, #,_,_
qreadstate, #,_,_,>,>,-

//qreadstate
qreadstate, 1,1,_
qreadstate, 1,1,1,>,-,>

qreadstate, 0,1,_
qinputcheck, 0,1,_,>,-,<

qreadstate, 1,0,_
qreadstate, 1,0,1,>,-,>

qreadstate, 0,0,_
qinputcheck, 0,0,_,>,-,<

//qinputcheck
qinputcheck, 1,0,1
qcopystate, 1,0,1,-,>,-

qinputcheck, 1,1,1
q1start,1,1,1,-,-,-

//qcopystate
qcopystate, 1,0,1
qcopystate,1,0,1,>,-,>

qcopystate, 1,0,_
qcopystate, 1,0,1,>,-,>

qcopystate, 0,0,_
qcopystate, 0,0,_,-,-,-

qcopystate, 1,1,1
qcopystate,1,1,1,>,-,>

qcopystate, 1,1,_
qcopystate, 1,1,1,>,-,>

qcopystate, 0,1,_
qloopback, 0,1,_,-,-,<

//q1start
q1start, 1,1,1
q1start,1,1,1,>,-,-

q1start,0,1,1
qcopystate,0,1,1,>,-,-

//qloopback
qloopback,_,1,1
qloopback, _,1,1,<,-,<

qloopback,1,1,1
qloopback,1,1,1,<,-,<

qloopback,0,1,1
qloopback,0,1,1,<,-,<

qloopback,_,0,1
qloopback, _,0,1,<,-,<

qloopback,1,0,1
qloopback,1,0,1,<,-,<

qloopback,0,0,1
qloopback, 0,0,1,<,-,<

qloopback,1,1,_
qloopback,1,1,_,<,-,-

qloopback,1,0,_
qloopback,1,0,_,<,-,-

qloopback,0,1,_
qloopback,0,1,_,<,-,-

qloopback,0,0,_
qloopback,0,0,_,<,-,-

qloopback,#,1,_
qstatecheck,#,1,_,>,-,>

qloopback,#,0,_
qstatecheck,#,0,_,>,-,>

//qstatecheck
qstatecheck,1,1,1
qstatecheck,1,1,1,>,-,>

qstatecheck,1,0,1
qstatecheck,1,0,1,>,-,>

qstatecheck,0,1,1
qresetcurrent,0,1,1,-,-,-

qstatecheck,0,0,1
qresetcurrent,0,0,1,-,-,-

qstatecheck,0,1,_
qinputcheck,0,1,_,>,>,<

qstatecheck,0,0,_
qinputcheck,0,0,_,>,>,<

//qnextstate1
qnextstate1,1,1,1
qnextstate1,1,1,1,>,-,-

qnextstate1,1,0,1
qnextstate1,1,0,1,>,-,-

qnextstate1,0,1,1
qnextstate2,0,1,1,>,-,-

qnextstate1,0,0,1
qnextstate2,0,0,1,>,-,-

//qnextstate2
qnextstate2,1,1,1
qnextstate2,1,1,1,>,-,-

qnextstate2,1,0,1
qnextstate2,1,0,1,>,-,-

qnextstate2,0,1,1
qstatecheck,0,1,1,>,-,-

qnextstate2,0,0,1
qstatecheck,0,0,1,>,-,-

//qresetcurrent

qresetcurrent,0,0,1
qresetcurrent,0,0,1,-,-,<

qresetcurrent,0,1,1
qresetcurrent,0,1,1,-,-,<

qresetcurrent,0,0,_
qnextstate1,0,0,_,-,-,>

qresetcurrent,0,1,_
qnextstate1,0,1,_,-,-,>
